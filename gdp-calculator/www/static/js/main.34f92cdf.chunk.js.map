{"version":3,"sources":["components/shared/Navbar.js","components/home/Home.js","screens/home/HomeScreen.js","screens/router/NotFoundScreen.js","constants.js","components/university/Lesson.js","components/university/Result.js","components/university/Lessons.js","components/university/Count.js","components/university/Grading.js","router/routePath.js","screens/university/UniversityScreen.js","router/RouteWithSubRoutes.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Navbar","history","useHistory","className","role","aria-label","onClick","push","Home","HomeScreen","NotFoundScreen","window","location","href","to","types","key","grade","Lesson","index","lessons","setLessons","gradingList","grading","useState","gradingSelect","setGradingSelect","creditSelect","setCreditSelect","useEffect","objIndex","findIndex","obj","parseFloat","credit","data","onChange","e","target","value","required","map","item","i","viewBox","d","clipRule","fillRule","Result","result","setResult","setCredit","calculateResult","preResult","totalCredit","console","log","forEach","element","toFixed","Lessons","semester","count","isDoneLessons","setIsDoneLessons","onSubmit","list","lessonRender","type","Count","setCount","isDoneCount","setIsDoneCount","preventDefault","min","isNaN","parseInt","Grading","setGrading","isDoneGrading","setIsDoneGrading","clickHandler","routes","path","component","exact","RouteWithSubRoutes","route","render","props","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","startApp","ReactDOM","StrictMode","document","getElementById","cordova","addEventListener","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.34f92cdf.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Navbar = () => {\n    const history = useHistory();\n\n    return (\n        <nav className=\"flex fixed bg-green-200 w-full h-12 z-10\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"text-xl w-100 h-100 text-center px-3 flex justify-center items-center\">\n                <button className=\"font-bold text-green-900 \" onClick={()=>{ history.push(\"/ana-sayfa\")}} >\n                    GDP\n                </button>\n            </div>\n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Home = () => {\n  const history = useHistory();\n\n  return (\n    <section className=\"flex items-center justify-center text-dark h-screen bg-green-50\">\n      <div className=\"container px-5\">\n        \n        <div className=\"rounded-xl bg-white border-gray-200 shadow overflow-hidden p-5 text-center\">\n          <p className=\"md:text-xl sm:text-base\">Üniversite ortalama hesaplama</p>\n          <div className=\"md:mt-14 sm:mt-10 mt-8\">\n            <button\n              className=\"button md:text-lg sm:text-base\"\n              onClick={() => {\n                history.push(\"/universite\");\n              }}\n            >\n              Başlayalım\n            </button>\n          </div>\n        </div>\n\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Navbar from '../../components/shared/Navbar';\nimport Home from \"../../components/home/Home\";\n\nconst HomeScreen = () => {\n    return (\n        <div>\n            <Navbar />\n            <Home />\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFoundScreen = () => {\n  return (\n    <section className=\"flex bg-yellow-50 w-100 min-h-screen\">\n      <div className=\"flex-box px-4 text-center m-auto\">\n        <p className=\"text-4xl font-bold font-sans tracking-wider text-yellow-700\">404?</p>\n        <p className=\"text-lg my-5\">\n          {window.location.href}\n        </p>\n        <p className=\"text-lg my-5\">\n          Üzgünüm, böyle bir sayfa yok. Başka bir şeyler mi arıyordun?\n        </p>\n        <Link to=\"/ana-sayfa\" className=\"rounded-md shadow-md hover:bg-yellow-300 bg-yellow-200 p-3\">\n          Ana sayfaya dön\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nexport default NotFoundScreen;\n","export const types = {\n  HALF: \"half\",\n  FULL: \"full\",\n  CREDIT_TYPE_1: [\n    { key: \"AA\", grade: 4.0 },\n    { key: \"BA\", grade: 3.5 },\n    { key: \"BB\", grade: 3.0 },\n    { key: \"CB\", grade: 2.5 },\n    { key: \"CC\", grade: 2.0 },\n    { key: \"DC\", grade: 1.5 },\n    { key: \"DD\", grade: 1.0 },\n    { key: \"FD\", grade: 0.5 },\n    { key: \"FF\", grade: 0.0 },\n  ],\n\n  CREDIT_TYPE_2: [\n    { key: \"A\", grade: 4.0 },\n    { key: \"A-\", grade: 3.7 },\n    { key: \"B+\", grade: 3.3 },\n    { key: \"B\", grade: 3.0 },\n    { key: \"B-\", grade: 2.7 },\n    { key: \"C+\", grade: 2.3 },\n    { key: \"C\", grade: 2.0 },\n    { key: \"C-\", grade: 1.7 },\n    { key: \"D+\", grade: 1.3 },\n    { key: \"D\", grade: 1.0 },\n    { key: \"F\", grade: 0.0 },\n  ],\n};\n","import React, { useState, useEffect } from \"react\";\n\nconst Lesson = ({ index, lessons, setLessons, grading }) => {\n  const creditList = [\n    0.5,\n    1,\n    1.5,\n    2,\n    2.5,\n    3,\n    3.5,\n    4,\n    4.5,\n    5,\n    5.5,\n    6,\n    6.5,\n    7,\n    7.5,\n    8,\n    8.5,\n    9,\n    9.5,\n    10,\n    10.5,\n    11,\n    11.5,\n    12,\n    12.5,\n    13,\n    13.5,\n    14,\n    14.5,\n    15,\n    15.5,\n    16,\n    16.5,\n    17,\n    17.5,\n    18,\n    18.5,\n    19,\n    19.5,\n    20,\n    20.5,\n    21,\n    21.5,\n    22,\n    22.5,\n    23,\n    23.5,\n    24,\n    24.5,\n    25,\n    25.5,\n    26,\n    26.5,\n    27,\n    27.5,\n    28,\n    28.5,\n    29,\n    29.5,\n    30,\n  ];\n  const gradingList = grading;\n  const [gradingSelect, setGradingSelect] = useState(\"\");\n  const [creditSelect, setCreditSelect] = useState(\"\");\n\n  useEffect(() => {\n    let objIndex = lessons.findIndex((obj) => obj.key === index);\n\n    if (objIndex > -1) {\n      lessons[objIndex].grading = parseFloat(gradingSelect);\n      lessons[objIndex].credit = parseFloat(creditSelect);\n    } else {\n      if (gradingSelect && creditSelect) {\n        const data = {\n          key: index,\n          grading: parseFloat(gradingSelect),\n          credit: parseFloat(creditSelect),\n        };\n        setLessons([...lessons, data]);\n      }\n    }\n  }, [gradingSelect, creditSelect]);\n\n  return (\n    <div className=\"flex justify-center items-center my-5\">\n      <div className=\"md:mx-4 md:my-1 sm:mx-2 sm:my-1 mx-1 my-1\">\n        <div className=\"\">{index + 1}.</div>\n      </div>\n\n      <div className=\"md:mx-4 md:my-1 sm:mx-2 sm:my-1 mx-1 my-1\">\n        <div className=\"relative inline-block w-full text-gray-700 z-0\">\n          <select\n            className=\"py-1 md:pr-12 md:pl-8 sm:pr-10 sm:pl-6 pr-6 pl-4 text-base border rounded-lg w-full appearance-none focus:shadow-outline\"\n            onChange={(e) => {\n              setGradingSelect(e.target.value);\n            }}\n            required\n          >\n            <option value=\"\">Not</option>\n            {gradingList.map((item, i) => (\n              <option key={i} value={item.grade}>\n                {item.key}\n              </option>\n            ))}\n          </select>\n          <div className=\"absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none\">\n            <svg className=\"w-4 h-4 fill-current\" viewBox=\"0 0 20 20\">\n              <path\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n                fillRule=\"evenodd\"\n              ></path>\n            </svg>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"md:mx-4 md:my-1 sm:mx-2 sm:my-1 mx-1 my-1\">\n        <div className=\"relative inline-block w-full text-gray-700 z-0\">\n          <select\n            className=\"py-1 md:pr-12 md:pl-8 sm:pr-10 sm:pl-6 pr-6 pl-4 text-base border rounded-lg w-full appearance-none focus:shadow-outline\"\n            onChange={(e) => {\n              setCreditSelect(e.target.value);\n            }}\n            required\n          >\n            <option value=\"\">Kredi</option>\n            {creditList.map((item, i) => (\n              <option key={i} value={item}>\n                {item}\n              </option>\n            ))}\n          </select>\n          <div className=\"absolute inset-y-0 right-0 flex items-center px-2 pointer-events-none\">\n            <svg className=\"w-4 h-4 fill-current\" viewBox=\"0 0 20 20\">\n              <path\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n                fillRule=\"evenodd\"\n              ></path>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Lesson;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Result = ({ lessons }) => {\n  const history = useHistory();\n  const [result, setResult] = useState(0);\n  const [credit, setCredit] = useState(0);\n\n  useEffect(() => {\n    calculateResult();\n  }, []);\n\n  const calculateResult = () => {\n    let preResult = 0;\n    let totalCredit = 0;\n\n    console.log(\"lessons\",lessons)\n\n    lessons.forEach((element) => {\n      preResult += element.grading * element.credit;\n      totalCredit += element.credit;\n    });\n\n    setCredit(totalCredit.toFixed(2));\n    setResult((preResult / totalCredit).toFixed(2));\n  };\n\n  return (\n    <div className=\"rounded-xl bg-white border-gray-200 shadow overflow-hidden p-5 text-center\">\n      <p className=\"md:text-xl sm:text-base\">Sonuç</p>\n      <div className=\"md:mt-14 sm:mt-10 mt-8\">\n        \n        <div className=\"md:text-xl sm:text-lg text-lg my-2\">\n          Not ortalaman &nbsp;\n          <span className=\"font-bold\">{result}</span>\n        </div>\n\n        <div className=\"md:text-lg sm:text-base text-base my-2\">\n          Toplam kredi &nbsp;\n          <span className=\"font-bold\">{credit}</span>\n        </div>\n\n      </div>\n      <div className=\"md:mt-14 sm:mt-10 mt-8\">\n        <button\n          className=\"button\"\n          onClick={() => {\n            history.push(\"/ana-sayfa\");\n          }}\n        >\n          Tekrar hesapla\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Result;\n","import React, { useState, useEffect } from \"react\";\nimport Lesson from \"./Lesson\";\nimport Result from \"./Result\";\n\nconst Lessons = ({ semester, grading, count }) => {\n  const [isDoneLessons, setIsDoneLessons] = useState(false);\n  const [lessons, setLessons] = useState([]);\n\n  useEffect(() => {\n    console.log(\"lessons\", lessons);\n  }, [lessons]);\n\n  const lessonRender = () => {\n    let list = [];\n    for (let i = 0; i < count; i++) {\n      list.push(i);\n    }\n\n    return list.map((item, i) => (\n      <Lesson\n        key={i}\n        index={i}\n        grading={grading}\n        lessons={lessons}\n        setLessons={setLessons}\n      />\n    ));\n  };\n\n  return (\n    <div>\n      {isDoneLessons ? (\n        <Result lessons={lessons} />\n      ) : (\n        <div className=\"rounded-xl bg-white border-gray-200 shadow overflow-hidden p-5 text-center my-20\">\n          <p className=\"md:text-xl sm:text-base\">Not ve kredi seçimi</p>\n          <div className=\"md:mt-14 sm:mt-10 mt-8\">\n            <form\n              onSubmit={(e) => {\n                setIsDoneLessons(true);\n              }}\n            >\n              {lessonRender()}\n\n              <div className=\"md:mt-14 sm:mt-10 mt-8\">\n                <button\n                  type=\"submit\"\n                  className=\"button\"\n                >\n                  Tamam\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Lessons;\n","import React, { useState } from \"react\";\nimport Lessons from \"./Lessons\";\n\nconst Count = ({ semester, grading }) => {\n  const [count, setCount] = useState(1);\n  const [isDoneCount, setIsDoneCount] = useState(false);\n\n  const submitHandler = () => {\n    setIsDoneCount(true);\n  };\n\n  const changeHandler = (value) => {\n    if (value === \"\") {\n      setCount(0);\n    } else if (!isNaN(value)) {\n      setCount(parseInt(value));\n    } else if (isNaN(value)) {\n      setCount(0);\n    }\n  };\n\n  return (\n    <div>\n      {isDoneCount ? (\n        <Lessons semester={semester} grading={grading} count={count} />\n      ) : (\n        <div className=\"rounded-xl bg-white border-gray-200 shadow overflow-hidden p-5 text-center\">\n          <p className=\"md:text-xl sm:text-base\">Ders sayısı</p>\n          <div className=\"md:mt-14 sm:mt-10 mt-8\">\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                submitHandler();\n              }}\n            >\n              <div className=\"flex justify-center items-center\">\n                <div className=\"m-1\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-yellow-200 text-yellow-900 hover:bg-yellow-300 duration-75 font-medium text-md rounded w-10 h-10\"\n                    onClick={() => {\n                      if (count > 1) {\n                        setCount(count - 1);\n                      }\n                    }}\n                  >\n                    <span className=\"text-lg\">-</span>\n                  </button>\n                </div>\n\n                <div className=\"\">\n                  <div className=\"field\">\n                    <input\n                      className=\"rounded border focus:outline-none focus:border-4 focus:border-blue-300 border-gray-400 w-full h-10 p-3\"\n                      type=\"number\"\n                      required\n                      min=\"1\"\n                      value={count}\n                      onChange={(e) => {\n                        changeHandler(e.target.value);\n                      }}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"m-1\">\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-200 text-blue-900 hover:bg-blue-300 duration-75 font-medium text-md rounded w-10 h-10\"\n                    onClick={() => {\n                      setCount(count + 1);\n                    }}\n                  >\n                    <span className=\"text-lg\">+</span>\n                  </button>\n                </div>\n              </div>\n              <div className=\"md:mt-14 sm:mt-10 mt-8\">\n                <button className=\"button\">\n                  Tamam\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Count;\n","import React, { useState } from \"react\";\nimport { types } from \"../../constants\";\nimport Count from \"./Count\";\n\nconst Grading = () => {\n  const [grading, setGrading] = useState(\"\");\n  const [isDoneGrading, setIsDoneGrading] = useState(false);\n\n  const clickHandler = () => {\n    setIsDoneGrading(true);\n  };\n\n  return (\n    <div>\n      {isDoneGrading ? (\n        <Count grading={grading} />\n      ) : (\n        <div className=\"rounded-xl bg-white border-gray-200 shadow overflow-hidden p-5 text-center\">\n          <p className=\"md:text-xl sm:text-base\">Kredi çeşidi</p>\n          <div className=\"md:mt-14 sm:mt-10 mt-8\">\n            <div className=\"my-2\">\n              <button\n                onClick={() => {\n                  setGrading(types.CREDIT_TYPE_1);\n                  clickHandler();\n                }}\n                className=\"button md:text-base sm:text-sm text-sm\"\n              >\n                  AA, BA, BB, CB, CC, DC, DD, FD, FF\n              </button>\n            </div>\n            <div className=\"my-2\">\n              <button\n                onClick={() => {\n                  setGrading(types.CREDIT_TYPE_2);\n                  clickHandler();\n                }}\n                className=\"button md:text-base sm:text-sm text-sm\"\n              >\n                A, A-, B+, B, B-, C+, C, C-, D+, D, F\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Grading;\n","import HomeScreen from \"../screens/home/HomeScreen\";\nimport NotFoundScreen from \"../screens/router/NotFoundScreen\";\nimport UniversityScreen from \"../screens/university/UniversityScreen\";\n\nexport const routes = [\n  {\n    path: [\"/\",\"/ana-sayfa\",\"/index.html\"],\n    component: HomeScreen,\n    exact: true\n  },\n  {\n    path: \"/universite\",\n    component: UniversityScreen,\n    exact: false\n  },\n  {\n    component: NotFoundScreen,\n    exact: false\n  },\n];","import React from \"react\";\nimport Navbar from \"../../components/shared/Navbar\";\nimport Grading from \"../../components/university/Grading\";\n\nconst UniversityScreen = ({ location }) => {\n  return (\n    <div>\n      <Navbar />\n      <section className=\"flex items-center justify-center text-dark min-h-screen bg-green-50\">\n        <div className=\"container px-5\">\n          <Grading location={location} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default UniversityScreen;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nconst RouteWithSubRoutes = (route) => {\n  return (\n    <Route\n      path={route.path}\n      exact={route.exact}\n      render={(props) => {\n        return (\n        // pass the sub-routes down to keep nesting\n        <route.component {...props} routes={route.routes} />\n        );\n      }}\n    />\n  );\n};\n\nexport default RouteWithSubRoutes;","import React from 'react';\nimport { HashRouter as Router, Switch } from \"react-router-dom\";\nimport { routes } from \"./router/routePath\";\nimport RouteWithSubRoutes from \"./router/RouteWithSubRoutes\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        {routes.map((route, i) => (\n          <RouteWithSubRoutes key={i} {...route} />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst startApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n};\n\nif(!window.cordova) {\n  startApp()\n} else {\n  document.addEventListener('deviceready', startApp, false)\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}